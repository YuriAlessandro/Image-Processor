{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
functions.h\par \pard\plain 
{\tc\tcl2 \v bib/functions.h}
{\xe \v bib/functions.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 \par
   10 void intro()\{\par
   11     system("clear");\par
   12     printf("Bem vindo ao programa!\\n");\par
   13     printf("Dígite o nome do seu arquivo (sem extensão)");\par
   14     printf("\\t(Exemplo: lena)\\n");\par
   15 \}\par
   16 \par
   22 void read_image(Pixel image[lat][lat], FILE *imagepath)\{\par
   23     int i, j;\par
   24 \par
   25     /* Zera os valores da matriz.*/\par
   26     null_matrix(image);\par
   27 \par
   28     /* Os laços percorrem a matriz de pixels atribuindo a cada espaço os valores lidos do arquivo.\par
   29      * A execução é pausada caso o arquivo não seja do tipo P3.*/\par
   30     if(filetype[0] == 'P' && filetype[1] == '3')\par
   31         for(i = 0; i < height; i++)\par
   32             for(j = 0; j < width; j++)\par
   33                 fscanf(imagepath, "%i %i %i", &image[i][j].red, &image[i][j].green, &image[i][j].blue);\par
   34     else \{\par
   35         system("clear");\par
   36         printf("O tipo de arquivo PPM não é P3!\\n");\par
   37         exit(1);\par
   38     \}\par
   39 \par
   40     /* A conexão com o arquivo é encerrada.*/\par
   41     fclose(imagepath);\par
   42 \par
   43 \}\par
   44 \par
   50 void create_new_file(Pixel image[lat][lat])\{\par
   51     int i, j;\par
   52 \par
   53     /* Cria um novo arquivo e escreve as informações básicas da imagem nele.*/\par
   54     FILE *newfile;\par
   55     newfile = fopen(name, "w");\par
   56     fprintf(newfile, "%s\\n%i %i\\n%i\\n", filetype, width, height, clrRange);\par
   57 \par
   58     /* Percorre a matriz de pixels escrevendo os valores da mesma no arquivo.*/\par
   59     for(i = 0; i < height; i++)\par
   60         for(j = 0; j < width; j++)\par
   61                 fprintf(newfile, "%i %i %i ", image[i][j].red, image[i][j].green, image[i][j].blue);\par
   62 \par
   63     system("clear");\par
   64     printf("O arquivo %s foi criado com sucesso na pasta raíz do programa.\\n", name);\par
   65 \}\par
   66 \par
   72 void null_matrix(Pixel image[lat][lat])\{\par
   73     int i, j;\par
   74     for(i = 0; i < lat; i++)\par
   75         for(j = 0; j < lat; j++)\{\par
   76             image[i][j].blue = 0;\par
   77             image[i][j].red = 0;\par
   78             image[i][j].green = 0;\par
   79         \}\par
   80 \}\par
   81 \par
   87 void rotation_controller(Pixel image[lat][lat])\{\par
   88     int ang;\par
   89     printf("Digite o angulo de rotação (em sentido horario):\\n");\par
   90     scanf("%i", &ang);\par
   91     switch (ang)\{\par
   92         case 90:\par
   93             strcat(name, "_rot_90.ppm");\par
   94             ef_rotate_left(image);\par
   95             ef_rotate_left(image);\par
   96             ef_rotate_left(image);\par
   97             break;\par
   98         case 180:\par
   99             strcat(name, "_rot_180.ppm");\par
  100             ef_rotate_left(image);\par
  101             ef_rotate_left(image);\par
  102             break;\par
  103         case 270:\par
  104             strcat(name, "_rot_270.ppm");\par
  105             ef_rotate_left(image);\par
  106             break;\par
  107         default:\par
  108             system("clear");\par
  109             printf("Escolha um angulo reto: 90 - 180 - 270 \\n");\par
  110             rotation_controller(image);         \par
  111     \}\par
  112 \}\par
  113 \par
  119 void choose_options(Pixel image[lat][lat])\{\par
  120     int choice;\par
  121     \par
  122     printf("\\n======== Escolha uma opção =======\\n");\par
  123     printf("1 - thr     //    Thresholding   *\\n");\par
  124     printf("2 - blur    //    Blurring       *\\n");\par
  125     printf("3 - sha     //    Sharpening     *\\n");\par
  126     printf("4 - rot     //    Rotacionar     *\\n");\par
  127     printf("5 - amp     //    Ampliar        *\\n");\par
  128     printf("6 - red     //    Reduzir        *\\n");\par
  129     printf("==================================\\n");\par
  130 \par
  131     printf("============= Extras =============\\n");\par
  132     printf("10 - bw     //    Preto e Branco *\\n");\par
  133     printf("11 - Mir    //    Espelhar       *\\n");\par
  134     printf("12 - borda  //    Detecta Bordas *\\n");\par
  135     printf("13 - inv    //    Negativo       *\\n");\par
  136     printf("14 - sep    //    Tom de sepia   *\\n");\par
  137     printf("15 - comp   //    Compressão RLE *\\n");\par
  138     printf("==================================\\n\\n");\par
  139 \par
  140     printf("[0 - Exit]\\n");\par
  141 \par
  142 \par
  143     scanf("%i", &choice);\par
  144     controller(choice, image);\par
  145 \}\par
  146 \par
  152 void controller(int choice, Pixel image[lat][lat])\{\par
  153     int value;\par
  154 \par
  155     /* De acordo com a escolha do usuário, o programa muda o nome do arquivo e executa a função respectiva.*/\par
  156     switch(choice)\{\par
  157         case THR:\par
  158             printf("Insira o padrão de binarização entre 0 e 255 (Padrão = 127)\\n");\par
  159             scanf("%i", &value);\par
  160             sprintf(nameFile, "_thr_%i.ppm", value);\par
  161             strcat(name, nameFile);\par
  162             ef_thresholding(image, value);\par
  163             break;\par
  164 \par
  165         case BLU:\par
  166             strcat(name, "_blur.ppm");\par
  167             ef_blur(image);\par
  168             break;\par
  169 \par
  170         case SHAR:\par
  171             strcat(name, "_shar.ppm");\par
  172             ef_sharpening(image);\par
  173             break;\par
  174 \par
  175         case ROT:\par
  176             system("clear");\par
  177             rotation_controller(image);\par
  178             break;\par
  179 \par
  180         case AMP:\par
  181             printf("Quantas vezes deseja ampliar a imagem?\\n");\par
  182             scanf("%i", &value);\par
  183             sprintf(nameFile, "_amp_%i.ppm", value);\par
  184             strcat(name, nameFile);\par
  185             ef_enlarge(image, value);\par
  186             break;\par
  187 \par
  188         case RED:\par
  189             printf("Quantas vezes deseja reduzir a imagem?\\n");\par
  190             scanf("%i", &value);\par
  191             sprintf(nameFile, "_red_%i.ppm", value);\par
  192             strcat(name, nameFile);\par
  193             ef_reduce(image, value);\par
  194             break;\par
  195 \par
  196         case BW:\par
  197             strcat(name, "_bw.ppm");\par
  198             ef_black_white(image);\par
  199             break;\par
  200 \par
  201         case MIR:\par
  202             strcat(name, "_mir.ppm");\par
  203             ef_horizontal_mirror(image);\par
  204             break;\par
  205 \par
  206         case BORD:\par
  207             strcat(name, "_bordas.ppm");\par
  208             ef_border_detection(image);\par
  209             break;\par
  210 \par
  211         case INV:\par
  212             strcat(name, "_neg.ppm");\par
  213             ef_negative(image, clrRange);\par
  214             break;\par
  215 \par
  216         case SEP:\par
  217             strcat(name, "_sepia.ppm");\par
  218             ef_sepia(image);\par
  219             break;\par
  220         \par
  221         case COMP:\par
  222             strcat(name, "_comp.ppmc");\par
  223             compress_img(image);\par
  224             break;\par
  225             \par
  226         case EXIT:\par
  227             exit(1);\par
  228 \par
  229         default:\par
  230             system("clear");\par
  231             printf("Essa opcao nao existe, tente novamente.\\n\\n");\par
  232             choose_options(image);\par
  233             break;\par
  234     \}\par
  235 \}\par
  236 \par
  242 void compress_img(Pixel image[lat][lat])\{\par
  243     int i, j, mult = 0;\par
  244 \par
  245     /* Cria um único Pixel temporário para servir de auxiliar na função.*/\par
  246     Pixel temp = image[0][0];\par
  247 \par
  248     /* Cria o novo arquivo e escreve as informações básicas da imagem nele.*/\par
  249     FILE *newfile;\par
  250     newfile = fopen(name, "w");\par
  251     fprintf(newfile, "%s\\n%i %i\\n%i\\n", filetype, width, height, clrRange);\par
  252 \par
  253     /* Os laços percorrem a matriz procurando por pixels repetidos e escrevendo-os\par
  254      * no arquivo de acordo com o número de vezes que apareceram consecutivamente.*/\par
  255     for(i = 0; i < height; i++)\{\par
  256         for(j = 0; j < width; j++)\{\par
  257             if(temp.red == image[i][j].red && temp.green == image[i][j].green && temp.blue == image[i][j].blue)\{\par
  258                 mult++;\par
  259             \}else\{\par
  260                 fprintf(newfile, "%i(%i %i %i)\\n", mult, temp.red, temp.green, temp.blue);\par
  261                 mult = 1;\par
  262                 temp = image[i][j];\par
  263             \}\par
  264         \}\par
  265     \}\par
  266 \par
  267     fprintf(newfile, "%i(%i %i %i) ", mult, temp.red, temp.green, temp.blue);\par
  268     fclose(newfile);\par
  269 \par
  270     system("clear");\par
  271     printf("O arquivo %s foi criado com sucesso na pasta raíz do programa.\\n", name);\par
  272 \}\par
  273 \par
  279 void decompress_img(FILE *imagepath)\{\par
  280     FILE *newfile;\par
  281     int i, mult = 0;\par
  282 \par
  283     /* Cria um único Pixel temporário para servir de auxiliar na função.*/\par
  284     Pixel temp;\par
  285 \par
  286     /* Cria o novo arquivo com um novo sufixo no nome.*/\par
  287     strcpy(nameFile, name);\par
  288     strcat(nameFile, "_decomp.ppm");\par
  289     newfile = fopen(nameFile, "w");\par
  290 \par
  291     printf("O arquivo indicado está comprimido, começando descompressão\\n");\par
  292 \par
  293     /* Lê e escreve as informações básicas da imagem no novo arquivo.*/\par
  294     fgets(filetype, 3, imagepath);\par
  295     fscanf(imagepath, "%i %i %i", &width, &height, &clrRange);\par
  296     fprintf(newfile, "%s\\n%i %i\\n%i\\n", filetype, width, height, clrRange);\par
  297 \par
  298     /* Lê as informações do arquivo antigo e as escreve já descomprimidas no arquivo novo.*/\par
  299     while(fscanf(imagepath, "%i(%i %i %i)", &mult, &temp.red, &temp.green, &temp.blue) != EOF)\par
  300         for (i = 0; i < mult; i++)\par
  301             fprintf(newfile, "%i %i %i ", temp.red, temp.green, temp.blue);\par
  302 \par
  303     \par
  304     fclose(newfile);\par
  305     imagepath = fopen(nameFile, "r");\par
  306 \par
  307     printf("O arquivo foi descomprimido com sucesso.\\n");\par
  308 \}\par
}
}